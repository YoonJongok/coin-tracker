{"version":3,"sources":["api.ts","atoms.ts","components/Header.tsx","routes/Chart.tsx","components/PriceArticle.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","SHeader","styled","header","Title","h1","DarkModeBtn","button","props","theme","borderConfig","bgColor","LinkContainer","span","current","Header","headerName","pathname","useLocation","setDarkAtom","useSetRecoilState","isDarkMode","useRecoilValue","to","icon","faChevronLeft","onClick","prev","faSun","faMoon","Chart","isDark","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","height","series","map","price","x","time_close","y","open","toFixed","high","low","close","options","chart","title","text","align","xaxis","yaxis","tooltip","enabled","plotOptions","candlestick","colors","upward","downward","mode","grid","show","stroke","curve","width","Article","article","ArticleItem","div","cardBgColor","textColor","PriceArticle","value","includes","style","color","Container","section","Price","priceAttr","quotes","USD","usd","percent_change_1h","percent_change_12h","market_cap_change_24h","Loader","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","accentColor","Coin","useParams","state","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","name","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","exact","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.49b4642f.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  //from 2weeks before now\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: false,\n});\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faMoon,\n  faSun,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface ContainerProps {\n  current: boolean;\n}\ninterface IHeaderProps {\n  headerName: string | undefined;\n}\nconst SHeader = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  align-self: center;\n  color: #0e1013;\n  font-size: 3rem;\n  margin: auto;\n`;\n\nexport const DarkModeBtn = styled.button`\n  width: 2.8rem;\n  height: 2.8rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: ${(props) => props.theme.borderConfig};\n  border-radius: 8px;\n  background-color: ${(props) => props.theme.bgColor};\n  font-size: 1rem;\n  text-align: center;\n  align-self: center;\n  &:hover {\n    background-color: #171b1f;\n    transition: 0.2s ease-in-out;\n    border: none;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst LinkContainer = styled.span<ContainerProps>`\n  visibility: ${(props) => (props.current ? \"hidden\" : \"visible\")};\n  width: 2.8rem;\n  height: 2.8rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: ${(props) => props.theme.borderConfig};\n  border-radius: 8px;\n  background-color: ${(props) => props.theme.bgColor};\n  color: #0e1013;\n  font-size: 1rem;\n  a {\n    padding: 2rem;\n    display: block;\n  }\n  &:hover {\n    background-color: #171b1f;\n    border: none;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nexport const Header = ({ headerName }: IHeaderProps) => {\n  const { pathname } = useLocation();\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const isDarkMode = useRecoilValue(isDarkAtom);\n  const toggleBtn = () => setDarkAtom((prev) => !prev);\n\n  return (\n    <SHeader>\n      <LinkContainer current={pathname === \"/\"}>\n        <Link to={\"/\"}>\n          <FontAwesomeIcon icon={faChevronLeft} />\n        </Link>\n      </LinkContainer>\n\n      <Title>{headerName}</Title>\n      <DarkModeBtn onClick={toggleBtn}>\n        {isDarkMode ? (\n          <FontAwesomeIcon icon={faSun} />\n        ) : (\n          <FontAwesomeIcon icon={faMoon} />\n        )}\n      </DarkModeBtn>\n    </SHeader>\n  );\n};\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\ninterface ChartProps {\n  coinId: string;\n}\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          height={350}\n          series={[\n            {\n              data: data?.map((price) => {\n                return {\n                  x: new Date(price.time_close),\n                  y: [\n                    price.open.toFixed(2),\n                    price.high.toFixed(2),\n                    price.low.toFixed(2),\n                    price.close.toFixed(2),\n                  ],\n                };\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n            },\n            title: {\n              text: \"2 weeks chart\",\n              align: \"left\",\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#3C90EB\",\n                  downward: \"#DF7D46\",\n                },\n              },\n            },\n            theme: {\n              mode: isDark ? \"light\" : \"dark\",\n            },\n            grid: { show: true },\n            stroke: {\n              curve: \"smooth\",\n              width: 2,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Article = styled.article`\n  display: flex;\n  width: 100%;\n  height: 4rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst ArticleItem = styled.div`\n  border: ${(props) => props.theme.borderConfig};\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 8px;\n  width: 50%;\n  padding: 0.5em 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    border-right: none;\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n  &:last-child {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n    font-size: 1.2rem;\n  }\n`;\ninterface PriceArticleProps {\n  title: string;\n  value: string;\n}\nconst PriceArticle = ({ title, value }: PriceArticleProps) => {\n  return (\n    <Article>\n      <ArticleItem>{title}</ArticleItem>\n      {value.includes(\"-\") ? (\n        <ArticleItem style={{ color: \"red\" }}>{value}</ArticleItem>\n      ) : (\n        <ArticleItem style={{ color: \"#2ecc71\" }}>{value}</ArticleItem>\n      )}\n    </Article>\n  );\n};\n\nexport default PriceArticle;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\nimport PriceArticle from \"../components/PriceArticle\";\nimport { PriceData } from \"./Coin\";\n\nconst Container = styled.section`\n  padding: 0px 4px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\ninterface PriceProps {\n  coinId: string;\n}\n\ntype priceAttrType = { key: string; value: string };\n\nexport const Price = ({ coinId }: PriceProps) => {\n  const { isLoading, data } = useQuery<PriceData>([\"tickers\", coinId], () =>\n    fetchCoinTickers(coinId)\n  );\n  let priceAttr: priceAttrType[] = [];\n  if (data?.quotes.USD) {\n    const usd = data.quotes.USD;\n    priceAttr = [\n      { key: \"Price\", value: `$ ${usd.price.toFixed(2)}` },\n      {\n        key: \"Percent changed in 1 hour\",\n        value: `${usd.percent_change_1h.toFixed(2)} %`,\n      },\n      {\n        key: \"Percent changed in 12 hour\",\n        value: `${usd.percent_change_12h.toFixed(2)} %`,\n      },\n      {\n        key: \"Market changed in 24 hour\",\n        value: `${usd.market_cap_change_24h.toFixed(2)} %`,\n      },\n    ];\n  }\n  return (\n    <Container>\n      {!isLoading &&\n        data?.quotes.USD &&\n        priceAttr.map(({ key, value }) => (\n          <PriceArticle key={key} title={key} value={value} />\n        ))}\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Link,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Header } from \"../components/Header\";\nimport Chart from \"./Chart\";\nimport { Price } from \"./Price\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  color: ${(props) => props.theme.textColor};\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  height: 25px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  align-self: center;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: ${(props) => (props.isActive ? \"0.8rem\" : \"12px\")};\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 0px;\n  border-radius: 10px;\n  border-bottom: ${(props) => (props.isActive ? \"2px solid\" : \"inherit\")};\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\nexport interface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n\n      <Header\n        headerName={\n          state?.name ? state.name : loading ? \"Loading...\" : infoData?.name\n        }\n      />\n\n      {loading ? (\n        <Loader>\"Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>${infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Suply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/${coinId}/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { Header } from \"../components/Header\";\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in;\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 3rem;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  /*const [coins, setCoins] = useState<ICoin[]>([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n      const json = await response.json();\n      setCoins(json.slice(0, 100));\n      setLoading(false);\n    })();\n  }, []);**/\n\n  return (\n    <Container>\n      <Helmet>\n        <title>CoinTracker | Coins</title>\n      </Helmet>\n\n      <Header headerName={\"Coin Tracker\"} />\n\n      <CoinsList>\n        {isLoading ? (\n          <Loader>\"Loading...</Loader>\n        ) : (\n          data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))\n        )}\n      </CoinsList>\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Coins />\n        </Route>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"rgba(0, 0, 0, 0.5)\",\n  borderConfig: \"2px #0e1013 solid\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#f1c40f\",\n  cardBgColor: \"rgba(0, 0, 0, 0.5)\",\n  borderConfig: \"1px #0e1013 \",\n};\n","import React, { useState } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,200;1,300&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}